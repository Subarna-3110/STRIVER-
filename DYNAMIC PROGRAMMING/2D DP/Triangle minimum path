class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n=triangle.size();
        
        int dp[][]=new int[n][n]; 
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                dp[i][j] = -1;
            }
        }
        return solve(triangle,0,0,dp);
    }

    static int solve(List<List<Integer>> lt,int i,int j,int dp[][])
    {
        if (i == lt.size() - 1) return lt.get(i).get(j);
     
        if(dp[i][j]!=-1) return dp[i][j];

        int down=0,diagnol=0;
        down=solve(lt,i+1,j,dp);
        diagnol=solve(lt,i+1,j+1,dp);

        return dp[i][j]=lt.get(i).get(j)+Math.min(down,diagnol);


    }

}
