class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n=obstacleGrid.length;
        int m=obstacleGrid[0].length;
        int dp[][]=new int[n][m];
        if (obstacleGrid[0][0] == 1) return 0;
        int a=solve(obstacleGrid,n-1,m-1,dp);
        return a;
    }

    static int solve(int dp[][],int i,int j,int dp1[][])
    {
        if(i==0 && j==0) return 1;
        if(i<0 || j<0) return 0;
       if(dp[i][j]==1)
        {
          return 0;
        }
        if(dp1[i][j]!=0) return dp1[i][j];
        int up = 0, left = 0;
     
        up=solve(dp,i-1,j,dp1);       
        left=solve(dp,i,j-1,dp1);
        return dp1[i][j]=up+left;

    }
}
