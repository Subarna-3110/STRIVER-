class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    
    List<List<Integer>> result=new ArrayList<>();
    if(root==null)
    {
        return result;
    }
    Stack<TreeNode> currentlevel=new Stack<>();
    Stack<TreeNode> nextlevel=new Stack<>();

    boolean lefttoright=true;
    currentlevel.push(root);
    List<Integer> row = new ArrayList<>();
    
    while(!currentlevel.isEmpty())
    {
        TreeNode node=currentlevel.pop();
        row.add(node.val);
        
        if(lefttoright)
        {
            if(node.left!=null)
            {
                nextlevel.push(node.left);
            }
            if(node.right!=null)
            {
                nextlevel.push(node.right);
            }
        }
        else
        {   if(node.right!=null)
            {
                nextlevel.push(node.right);
            }
            
            if(node.left!=null)
            {
                nextlevel.push(node.left);
            }         
        }

        if(currentlevel.isEmpty())
        {
            lefttoright=!lefttoright;
            result.add(new ArrayList<>(row));
            row.clear();
            Stack<TreeNode> temp=currentlevel;
            currentlevel=nextlevel;
            nextlevel=temp;
        }
    }

    return result;
    }
}
