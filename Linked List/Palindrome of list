import java.util.*;

class Main
{
  public static void main(String args[])
  {
    Scanner sc=new Scanner(System.in);
    LinkedList<Integer> l1=new LinkedList<>();
   
    int n=sc.nextInt();
    
    for(int i=0;i<n;i++)
    { l1.addLast(sc.nextInt());
    }
    LinkedList<Integer> l2=new LinkedList<>();
    for(int i:l1)
    {  l2.addFirst(i);
    }
    boolean check= true;
    
    for(int i=0; i<l1.size(); i++)
    {  
      if(l1.get(i)!=l2.get(i))
      { check=false;
       break;
      }
    }
    
    if(check)
    {
      System.out.println("True");
    }
    else
    { System.out.println("False");
    }
  }
}

class Solution {
    public boolean isPalindrome(ListNode head) {
        
        LinkedList<Integer> l1 = new LinkedList<>();
        if(head==null||head.next==null)
        {
            return true;
        }

        ListNode slow = head, fast = head;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }

        ListNode b=reverse(slow);
        ListNode a=head;

        while(b!=null)
        {
            if(a.val!=b.val)
            {
                return false;
            }
            a=a.next;
            b=b.next;
        }
        return true;
   }
   ListNode reverse(ListNode head)
   {
    ListNode prev=null;
    while(head!=null)
    {
        ListNode nextnode=head.next;
        head.next=prev;//breaking link
        prev=head;
        head=nextnode;
    }
    return prev;
   }
}
