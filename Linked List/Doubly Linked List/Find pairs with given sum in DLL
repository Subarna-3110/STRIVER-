import java.util.*;

class DoublyLinkedList {
    static class Node {
        int data;
        Node prev, next;

        Node(int data) {
            this.data = data;
        }
    }

    Node head;
    public void append(int data) {
        Node newNode = new Node(data);

        if (head == null) {
            head = newNode;
            return;
        }

        Node temp = head;
        while (temp.next != null)
            temp = temp.next;

        temp.next = newNode;
        newNode.prev = temp;
    }


    public void printList() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }

    // Sort DLL using ArrayList + Collections.sort()
    public void sortWithLibrary() {
        List<Integer> list = new ArrayList<>();

        Node temp = head;
        while (temp != null) {
            list.add(temp.data);
            temp = temp.next;
        }

        Collections.sort(list); // ascending order

        temp = head;
        for (int val : list) {
            temp.data = val;
            temp = temp.next;
        }
    }


    public void findPairsWithSum(int target) {
        Node start = head;
        Node end = head;

        while (end.next != null)
            end = end.next;

        boolean found = false;

        while (start != null && end != null && start != end && end.next != start) {
            int sum = start.data + end.data;

            if (sum == target) {
                System.out.println("(" + start.data + ", " + end.data + ")");
                found = true;
                start = start.next;
                end = end.prev;
            } else if (sum < target) {
                start = start.next;
            } else {
                end = end.prev;
            }
        }

        if (!found) {
            System.out.println("No pair found with sum " + target);
        }
    }


    public static void main(String[] args) {
        DoublyLinkedList dll = new DoublyLinkedList();

        // Create unsorted DLL
        int[] values = {9, 1, 5, 2, 8, 4, 6};
        for (int val : values) {
            dll.append(val);
        }

        System.out.print("Original DLL: ");
        dll.printList();

        // Sort the DLL using library
        dll.sortWithLibrary();

        System.out.print("Sorted DLL: ");
        dll.printList(); // Sorted

        int target = 10;
        System.out.println("Pairs with sum " + target + ":");
        dll.findPairsWithSum(target);
    }
}
