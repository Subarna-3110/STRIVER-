class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
       boolean vis[]=new boolean[V];
       ArrayList<Integer> ls=new ArrayList<>();
       
       vis[0]=true;
       dfs(0,ls,adj,vis);
       return ls;
       
    }
    
    public static void dfs(int n,ArrayList<Integer> ls,ArrayList<ArrayList<Integer>> adj,boolean vis[])
    {
        vis[n]=true;
        ls.add(n);
        
        for(Integer it:adj.get(n))
        {
            if(vis[it]==false)
            {
                dfs(it,ls,adj,vis);
            }
        }
    }
}
